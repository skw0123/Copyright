```
#구구단 no 함수 버전

#구구단 출력
for i in range(1, 10):
		print(f'{2} x {i} = {2 * i}')
for i in range(1, 10):
		print(f'{3} x {i} = {3 * i}')
		
# ...
for i in range(1, 10):
		print(f'{9} x {i} = {9 * i}')
```
```
#구구단 함수 버전
def gugudan(num):
		for i in range(1, 10):
				print(f'{num} x {i} = {num * i}')
				
#구구단 출력
gugudan(2)
gugudan(3)
# ...
gugudan(9)
```
```
#디폴트 파라미터 예제 1

def func1(a, b=5, c=10):
    return a + b + c
func1(1, 2, 3) #1 + 2 + 3
func1(1, 2) #1 + 2 + 10
func1(1) #1 + 5 + 10
#func1() error

#디폴트 파라미터 예제 2
def func2(a=10, b=20):
		return a + b
		
func2(1, 2) # 1 + 2
func2(1) # 1 + 20
func2() # 10 + 20
```
```
#아래는 잘못된 디폴트 파라미터
#디폴트 파라미터는 뒤에서부터 해야한다
#그래야 인수가 비었을 때 판단이 가능
def func3(a = 10, b, c): # error
		return a + b + c
		
func3(1, 2) # 1이 a이고 2가 b에 들어가는거겠지?
						# 뭘 원하는거야? error
func3( , 1, 2) # 뭐 이렇게 호출해야하나? error
```
```
def comp (score=0):
    if score == 0:
        return 0
    elif score > 50:
        return 2
    else:
        return 1
 
grade = comp (40)
print ("Grade is ", grade, " for ", 40)
 
grade = comp (80)
print ("Grade is ", grade, " for ", 80)
 
grade = comp ()
print ("Grade is ", grade, "for no score")
```
```
# Named parameter

def report(name, age, score):
    print(name, score)
 
report(age=10, name="Kim", score=80)
```
